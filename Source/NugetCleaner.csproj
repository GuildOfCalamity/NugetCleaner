<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows10.0.19041.0</TargetFramework>
    <TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
    <RootNamespace>NugetCleaner</RootNamespace>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <Platforms>x86;x64;ARM64</Platforms>
    <RuntimeIdentifiers Condition="$([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)')) &gt;= 8">win-x86;win-x64;win-arm64</RuntimeIdentifiers>
    <RuntimeIdentifiers Condition="$([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)')) &lt; 8">win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
    <PublishProfile>win-$(Platform).pubxml</PublishProfile>
    <UseWinUI>true</UseWinUI>
    <EnableMsixTooling>true</EnableMsixTooling>
    <Nullable>enable</Nullable>
    <ApplicationIcon>Assets/AppIcon.ico</ApplicationIcon>
    <TieredCompilationQuickJitForLoops>true</TieredCompilationQuickJitForLoops>
    <!-- 
        [for SDK v1.5 specifically]
        https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#other-new-features-from-across-the-winappsdk
        <PublishSingleFile>true</PublishSingleFile>
        <SelfContained>true</SelfContained>
        https://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/stable-channel#known-issues
        <ShouldComputeInputPris>true</ShouldComputeInputPris>
    -->
    <LangVersion>latest</LangVersion>
    <EnableMsixTooling>true</EnableMsixTooling>
    <Version>1.0.0.0</Version>
    <FileVersion>1.0.0.0</FileVersion>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <PackageId>NugetCleaner2025</PackageId>
    <Title>Nuget Cleaner</Title>
    <Authors>The Guild</Authors>
    <!-- 
      WindowsPackageType defines whether your app is packaged (MSIX) or unpackaged (None) 
    -->
    <WindowsPackageType>None</WindowsPackageType>
    <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
    <!-- 
      Get rid of all the unnecessary pathing that MS adds and 
      makes the output match the traditional .NET Framework builds.
    -->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <!-- 
         https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#generatedocumentationfile
    -->
    <!-- <GenerateDocumentationFile>true</GenerateDocumentationFile> -->
    <!-- 
         https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#optimizeimplicitlytriggeredbuild 
    -->
    <OptimizeImplicitlyTriggeredBuild>true</OptimizeImplicitlyTriggeredBuild>
    <!-- 
      If true, this will create a subfolder named "refs" which contains all of the possible framework dependencies. The default value is false.
      https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#preservecompilationcontext
    -->
    <PreserveCompilationContext>false</PreserveCompilationContext>
  </PropertyGroup>
  
  <!-- 
     Define "IS_UNPACKAGED" constant if the app is an unpackaged app. 
  -->
  <PropertyGroup Condition="'$(WindowsPackageType)' == 'None'">
      <DefineConstants>IS_UNPACKAGED</DefineConstants>
  </PropertyGroup>
  <ItemGroup>
    <Content Remove="Assets\Fonts\Hack.ttf" />
    <Content Remove="Assets\Screenshot.png" />
    <Content Remove="Assets\Screenshot2.png" />
    <Content Remove="Assets\Screenshot3.png" />
    <Content Remove="Assets\Screenshot4.png" />
    <Content Remove="Assets\Screenshot5.png" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="AnimatedCirclesControl.xaml" />
    <None Remove="Assets\Fonts\Hack.ttf" />
    <None Remove="Assets\WarningIcon.png" />
    <None Remove="CompositionShadow.xaml" />
    <None Remove="Dialogs\CloseAppDialog.xaml" />
    <None Remove="MainPage.xaml" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Include="Assets\Fonts\Hack.ttf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <Manifest Include="$(ApplicationManifest)" />
  </ItemGroup>

  <!--
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
  -->
  <ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <ProjectCapability Include="Msix" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="10.0.22621.3233" />
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="1.5.240607001" />
  </ItemGroup>
  <ItemGroup>
    <Content Update="Assets\AlertIcon.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\AppIcon.ico">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\AppIcon.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\LockScreenLogo.scale-200.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\NoticeIcon.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\Spinner2.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <None Update="Assets\Screenshot.png">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
    <None Update="Assets\Screenshot2.png">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
    <Content Update="Assets\SplashScreen.scale-200.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\Square150x150Logo.scale-200.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\Square44x44Logo.scale-200.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\Square44x44Logo.targetsize-24_altform-unplated.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\StoreLogo.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\Spinner.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\WarningIcon.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Update="Assets\Wide310x150Logo.scale-200.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  <ItemGroup>
    <Page Update="CompositionShadow.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="AnimatedCirclesControl.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
    <Page Update="Dialogs\AboutDialog.xaml">
      <SubType>Designer</SubType>
    </Page>
    <Page Update="Dialogs\CleanupDialog.xaml">
      <SubType>Designer</SubType>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="MainPage.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <ItemGroup>
    <Page Update="Dialogs\CloseAppDialog.xaml">
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>

  <!--
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution
    Explorer "Package and Publish" context menu entry to be enabled for this project even if
    the Windows App SDK Nuget package has not yet been restored.
  -->
  <PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
    <HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
  </PropertyGroup>

  <!-- Publish Properties -->
  <PropertyGroup>
    <PublishReadyToRun Condition="'$(Configuration)' == 'Debug'">False</PublishReadyToRun>
    <PublishReadyToRun Condition="'$(Configuration)' != 'Debug'">True</PublishReadyToRun>
    <PublishTrimmed Condition="'$(Configuration)' == 'Debug'">False</PublishTrimmed>
    <PublishTrimmed Condition="'$(Configuration)' != 'Debug'">True</PublishTrimmed>
  </PropertyGroup>

    <!-- 
      This target will remove the language folders inside the build output except the specified one. 
  -->
  <Target Name="RemoveFoldersWithMuiFiles" Condition="'$(WindowsPackageType)' == 'None'" AfterTargets="Build">
        <ItemGroup>
            <RemovingFiles Include="$(OutDir)*\*.mui" Exclude="$(OutDir)en-us\*.mui" />
            <RemovingFolders Include="@(RemovingFiles->'%(RootDir)%(Directory)')" />
            <RemovingCS Include="$(OutDir)cs" />
            <RemovingDE Include="$(OutDir)de" />
            <RemovingES Include="$(OutDir)es" />
            <RemovingFR Include="$(OutDir)fr" />
            <RemovingIT Include="$(OutDir)it" />
            <RemovingJA Include="$(OutDir)ja" />
            <RemovingKO Include="$(OutDir)ko" />
            <RemovingPL Include="$(OutDir)pl" />
            <RemovingRU Include="$(OutDir)ru" />
            <RemovingTR Include="$(OutDir)tr" />
            <RemovingZHS Include="$(OutDir)zh-Hans" />
            <RemovingZHT Include="$(OutDir)zh-Hant" />
        </ItemGroup>
        <RemoveDir Directories="@(RemovingFolders)" />
        <RemoveDir Directories="@(RemovingCS)" />
        <RemoveDir Directories="@(RemovingDE)" />
        <RemoveDir Directories="@(RemovingES)" />
        <RemoveDir Directories="@(RemovingFR)" />
        <RemoveDir Directories="@(RemovingIT)" />
        <RemoveDir Directories="@(RemovingJA)" />
        <RemoveDir Directories="@(RemovingKO)" />
        <RemoveDir Directories="@(RemovingPL)" />
        <RemoveDir Directories="@(RemovingRU)" />
        <RemoveDir Directories="@(RemovingTR)" />
        <RemoveDir Directories="@(RemovingZHS)" />
        <RemoveDir Directories="@(RemovingZHT)" />
  </Target>
</Project>